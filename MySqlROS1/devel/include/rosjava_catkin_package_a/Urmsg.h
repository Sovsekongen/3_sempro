// Generated by gencpp from file rosjava_catkin_package_a/Urmsg.msg
// DO NOT EDIT!


#ifndef ROSJAVA_CATKIN_PACKAGE_A_MESSAGE_URMSG_H
#define ROSJAVA_CATKIN_PACKAGE_A_MESSAGE_URMSG_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace rosjava_catkin_package_a
{
template <class ContainerAllocator>
struct Urmsg_
{
  typedef Urmsg_<ContainerAllocator> Type;

  Urmsg_()
    : pickUpTime(0)
    , throwTime(0)  {
    }
  Urmsg_(const ContainerAllocator& _alloc)
    : pickUpTime(0)
    , throwTime(0)  {
  (void)_alloc;
    }



   typedef uint32_t _pickUpTime_type;
  _pickUpTime_type pickUpTime;

   typedef uint32_t _throwTime_type;
  _throwTime_type throwTime;





  typedef boost::shared_ptr< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> const> ConstPtr;

}; // struct Urmsg_

typedef ::rosjava_catkin_package_a::Urmsg_<std::allocator<void> > Urmsg;

typedef boost::shared_ptr< ::rosjava_catkin_package_a::Urmsg > UrmsgPtr;
typedef boost::shared_ptr< ::rosjava_catkin_package_a::Urmsg const> UrmsgConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace rosjava_catkin_package_a

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'rosjava_catkin_package_a': ['/home/viktor/Desktop/3_sempro/MySqlROS/src/rosjava_catkin_package_a/my_pub_sub_tutorial/msg'], 'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> >
{
  static const char* value()
  {
    return "e40cf962e57959925868757d085c8b52";
  }

  static const char* value(const ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xe40cf962e5795992ULL;
  static const uint64_t static_value2 = 0x5868757d085c8b52ULL;
};

template<class ContainerAllocator>
struct DataType< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> >
{
  static const char* value()
  {
    return "rosjava_catkin_package_a/Urmsg";
  }

  static const char* value(const ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint32 pickUpTime\n\
uint32 throwTime\n\
";
  }

  static const char* value(const ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.pickUpTime);
      stream.next(m.throwTime);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct Urmsg_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::rosjava_catkin_package_a::Urmsg_<ContainerAllocator>& v)
  {
    s << indent << "pickUpTime: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.pickUpTime);
    s << indent << "throwTime: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.throwTime);
  }
};

} // namespace message_operations
} // namespace ros

#endif // ROSJAVA_CATKIN_PACKAGE_A_MESSAGE_URMSG_H
